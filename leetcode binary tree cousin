/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int p1=0,d1=0,p2=0,d2=0;
    int v1,v2;
    void search(TreeNode* root,int par,int lvl){
        if(root==NULL){
            return ;
        }
        if(root->val==v1){
            p1=par;
            d1=lvl; 
        }
        
        if(root->val==v2){
            p2=par;
            d2=lvl; 
        }
        
        search(root->left,root->val,lvl+1);
        search(root->right,root->val,lvl+1);
        
        
    }
    bool isCousins(TreeNode* root, int x, int y) {
        v1=x;
        v2=y;
        search(root,0,0);
        return (p1!=p2 && d1==d2);
    }
};
