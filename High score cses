#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd long long
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
using namespace std;
vector<pair<pii,ll> >edg;
ll dis[5005];
ll n,m,q;
ll mark[5005];
vector<ll> adj[5005];
ll vis[5005];
void dfs(ll v){
	
	vis[v]=1;
	for(ll i=0;i<adj[v].size();i++){
		ll u=adj[v][i];
	
		if(!vis[u])dfs(u);
	}
}
int main(){
  ll n,m;
  cin>>n>>m;
  for(ll i=0;i<m;i++){
  	 ll x,y,w;
  	 cin>>x>>y>>w;
  	 adj[x].pb(y);
  	 edg.pb(mpa(mpa(x,y),-w));
  }
  for(ll i=1;i<=n;i++)dis[i]=1e18;
  dis[1]=0;
  
  for(ll i=1;i<=n-1;i++){
  	    for(ll j=0;j<m;j++){
  	    	ll src=edg[j].ff.ff;
  	    	ll dest=edg[j].ff.ss;
  	    	ll len=edg[j].ss;
  	        
  	        if(dis[src]!=1e18 && dis[dest]>dis[src]+len){
  	        	dis[dest]=dis[src]+len;
			}
		}
    }
    
  	    for(ll j=0;j<m;j++){
  	    	ll src=edg[j].ff.ff;
  	    	ll dest=edg[j].ff.ss;
  	    	ll len=edg[j].ss;
  	        
  	        if(dis[src]!=1e18 && dis[dest]>dis[src]+len){
  	           mark[dest]=1;
  	        }
  	        
		}
		
		for(ll i=1;i<=n;i++){
		    
			if(mark[i]==1 && !vis[i]){
				dfs(i);
			}
		}
		
		if(vis[n]){
			cout<<-1;
		}
		else{
			cout<<-1*dis[n];
		}
    
  	
  	
  	
    
  
}
    
   
