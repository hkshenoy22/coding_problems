#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd long long
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
using namespace std;
vector<ll> adj[200005];
ll indeg[200005];
ll par[200005];
ll dis[200005];
ll vis[200005];
ll mx=0;
ll n;
void dfs(ll v){
	
	vis[v]=1;
	if(v==n){
		dis[n]=1;
		return;
	}
	
	for(const auto &u:adj[v]){
		if(!vis[u]){
			dfs(u);
			ll x=dis[u];
			if(x==0)continue;
			dis[v]=max(dis[v],1+x);
			if(dis[v]==x+1){
				par[v]=u;
			}
		}
		else{
		    ll x=dis[u];
		    if(x==0)continue;
			dis[v]=max(dis[v],1+x);
			if(dis[v]==x+1){
				par[v]=u;
			}
		    
		}
	}
			
			
			return ;
	
	
}

int main(){
    boost;
    ll m;
    cin>>n>>m;
    
    while(m--){
   	  ll x,y;
   	  cin>>x>>y;
   	  adj[x].pb(y);
    }
    
    dfs(1);
    ll x=dis[1];
    
    if(!x){
        cout<<"IMPOSSIBLE";
    	return 0;
	}else{
		cout<<x<<endl;
		ll v=1;
		while(v!=n){
			cout<<v<<" ";
			v=par[v];
		}
		cout<<v;
	}
    
    
    
   
   
}
  
