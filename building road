#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd long long
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
using namespace std;
ll par[200005];
ll sz[200005];
ll find_par(ll v){
	if(v!=par[v])return find_par(par[v]);
	return v;
}
void union_dsu(ll x,ll y){
	ll a=find_par(x);
	ll b=find_par(y);
	if(a==b) return;
	
	if(sz[a]>sz[b]){
		sz[a]+=sz[b];
		sz[b]=0;
		par[b]=a;
	}else{
		sz[b]+=sz[a];
		sz[a]=0;
		par[a]=b;
	}
	
}
int main(){
   
   ll n,m;
   cin>>n>>m;
   
   for(ll i=1;i<=n;i++)par[i]=i,sz[i]=1;
   
   while(m--){
   	   ll x,y;
   	   cin>>x>>y;
   	   union_dsu(x,y);
   	}
   	vector<ll> node; 
   	for(ll i=1;i<=n;i++){
   	    
   		if(sz[i]>0){
   			node.pb(i);
		}
   	}
   	
   	cout<<node.size()-1<<endl;
    for(ll i=1;i<node.size();i++) cout<<node[i]<<" "<<node[i-1]<<endl;
	
   
   
}
  
   
 
