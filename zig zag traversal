/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector< vector<int>  > sol;
        if(root==NULL){
            return sol;
        }
        
        queue< pair<TreeNode*,int> > q;
        q.push(make_pair(root,1));
       
        
        while(q.size()){
            auto x=q.front();
            auto v=x.first;
            auto d=x.second;
            
            q.pop();
            
            if(sol.size()<d){
                sol.push_back({v->val});
            }else{
                sol[d-1].push_back(v->val);
            }
            
            if(v->right)q.push({v->right,d+1});
            if(v->left)q.push({v->left,d+1});
                          
        }
        
        for(int i=0;i<sol.size();i++)if(i%2==0)reverse(sol[i].begin(),sol[i].end());
        return sol;
    }
};
