#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd long long
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
using namespace std;
vector<pii> adj[200005];
vector<ll> dist[2000005];


int main(){
  boost;
  ll n,m,k;
  cin>>n>>m>>k;
  while(m--){
  	ll x,y,w;
  	cin>>x>>y>>w;
  	adj[x].pb(mpa(y,w));
  }
  multiset<pair<ll,ll> > q;
  q.insert(mpa(0,1));
  
  while(q.size()){
  	
  	pii h=*q.begin();
  	
  	ll v=h.ss;
  	ll len=h.ff;
  	q.erase(q.begin());
  	
  	if(dist[n].size()>=k){
  		break;
	}
	if(dist[v].size()>=k){
		continue;
	}
	dist[v].pb(len);
	for(ll i=0;i<adj[v].size();i++){
		ll to=adj[v][i].ff;
		q.insert(mpa(len+adj[v][i].ss,to));
	}
  }
  
  for(ll i=0;i<k;i++) cout<<dist[n][i]<<" ";
  
  
	
		
}
   	  

    
   
