/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        
        if(nums.size()==0){
            return NULL;
        }
        TreeNode *root=new TreeNode();
        
        int n=nums.size();
        int l=0;
        int r=n;
        int m=n/2;
        root->val=nums[m];
        
        vector<int> lef,rig;
        
        for(int i=l;i<m;i++)lef.push_back(nums[i]);
        for(int i=m+1;i<r;i++)rig.push_back(nums[i]);
        
        
        
        if(lef.size())root->left=sortedArrayToBST(lef);
        if(rig.size())root->right=sortedArrayToBST(rig);
        
        return root;
    }
};
