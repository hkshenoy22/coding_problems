/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorder;
    void get_inorder(TreeNode* root){
        if(root){
           get_inorder(root->left);
           inorder.push_back(root->val);
           get_inorder(root->right); 
        }
    }
    bool findTarget(TreeNode* root, int k) {
       
       get_inorder(root);
       int n=inorder.size();
       int l=0;
       int r=n-1;
        
       while(r>l){
           if(inorder[l]+inorder[r]>k){
               r--;
           }
           else if(inorder[l]+inorder[r]<k){
               l++;
           }
           else{
               return 1;
           }
           
       }
        return 0;
    }
};
