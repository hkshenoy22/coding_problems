#include<bits/stdc++.h>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll  long long
#define ull unsigned long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
using namespace std;
ll vis[10][10];
char a[10][10];
ll ans=0;
map<ll,ll> helpd1,helpd2,helpc;
void solve(ll com){
	if(com==9){
		ans++;
		return;
	}
	
	for(ll j=1;j<=8;j++){
		if (a[com][j]=='*'){
			continue;
		}
		if(helpd1[com-j] or helpd2[com+j] or helpc[j])continue;
		helpd1[com-j]=1;
		helpd2[com+j]=1;
		helpc[j]=1;
		solve(com+1);
		helpd1[com-j]=0;
		helpd2[com+j]=0;
		helpc[j]=0;
	}
	
}
int main(){
	for(ll i=1;i<=8;i++){
		for(ll j=1;j<=8;j++){
			cin>>a[i][j];
		}
	}
	solve(1);
	cout<<ans;
	
}
	
 
    