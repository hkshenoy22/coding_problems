#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd long long
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
using namespace std;
pii par[1005][1005];
ll dis[1005][1005];
ll vis[1005][1005];
char a[1005][1005];
ll n,m;
ll stx,sty,enx,eny;
ll chk(ll x,ll y){
	if(x>=1 && x<=n && y>=1 && y<=m)return 1;
	return 0;
}
ll dx[]={-1,1,0,0};
ll dy[]={0,0,-1,1};

int main(){
   
   cin>>n>>m;
   for(ll i=1;i<=n;i++)for(ll j=1;j<=m;j++){
   	  cin>>a[i][j];
   	  dis[i][j]=1e7;
   	  if(a[i][j]=='A')stx=i,sty=j;
   	  if(a[i][j]=='B')enx=i,eny=j;
   }
   vis[stx][sty]=1;
   queue<pii> q;
   dis[stx][sty]=0;
   q.push(mpa(stx,sty));
 
   while(q.size()){
   	  ll x=q.front().ff;
   	  ll y=q.front().ss;
   	  
   	  q.pop();
   	  
   	  for(ll i=0;i<4;i++){
   	  	ll nx=x+dx[i];
   	  	ll ny=y+dy[i];
   	  	
   	  	if(chk(nx,ny) && dis[nx][ny]>dis[x][y]+1 && a[nx][ny]!='#'){
   	  		par[nx][ny]=mpa(x,y);
   	  		dis[nx][ny]=dis[x][y]+1;
   	  		q.push(mpa(nx,ny));
		}
   	}
   	  
   }
   if(dis[enx][eny]==1e7){
   	  cout<<"NO";
   	  return 0;
   }
   cout<<"YES\n";
   stack<char> route;
   
   while(enx!=stx or eny!=sty){
   	ll px=par[enx][eny].ff;
   	ll py=par[enx][eny].ss;
   	
   	if(px!=enx){
   		if(px>enx){
   			route.push('U');
		}
		else{
			route.push('D');
		}
	}else{
		if(py>eny){
			route.push('L');
		}else{
			route.push('R');
		}
	}
	enx=px;
	eny=py;
   	
   	
   }
   
   cout<<route.size()<<endl;
   
   while(route.size()){
   	  cout<<route.top();
   	  route.pop();
   }
   
   
   
   
}
  
   
 
