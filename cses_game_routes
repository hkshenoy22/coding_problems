#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd long long
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
using namespace std;
ll dp[200005];
vector<ll> adj[200005];
ll indeg[200005];
ll mod=1e9+7;


int main(){
    boost;
    ll n,m;
    cin>>n>>m;
    while(m--){
        ll x,y;
        cin>>x>>y;
        adj[x].pb(y);
        indeg[y]++;
    }
    dp[1]=1;
    queue<ll> q;
    for(ll i=1;i<=n;i++){
        if(indeg[i]==0)q.push(i);
    }
    
    while(q.size()){
        ll v=q.front();
        q.pop();
        
        for(const auto &u:adj[v]){
            dp[u]=(dp[u]+dp[v])%mod;
            indeg[u]--;
            if(indeg[u]==0)q.push(u);
        }
    }
    
     cout<<dp[n];
   
    
    
    
   
   
}
  
