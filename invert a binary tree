/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void invert(TreeNode **root){
        
        TreeNode *left=NULL,*right=NULL;
        
        if((*root)->left)left=(*root)->left;
        if((*root)->right)right=(*root)->right;
        
        if((*root)->left)invert(&((*root)->left));
        if((*root)->right)invert(&((*root)->right));
        
        (*root)->right=left;
        (*root)->left=right;
        
        
        
        
        
        
    }
    TreeNode* invertTree(TreeNode* root) {
        if(root==NULL){
            return NULL;
        }
        invert(&root);
        return root;
    }
};
