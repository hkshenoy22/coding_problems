class Solution {
public:
    
    int maxProfit(int k, vector<int>& prices) {
        
        
        int n=prices.size();
        
        if(k==0 or n<=1){
            return 0;
        }
        
        
        if(k>=n/2){
        
        int ans=0;
            
        for(int  i=1;i<n;i++)if(prices[i]-prices[i-1]>=0)ans+=prices[i]-prices[i-1];
        
        return ans;
        
        }
        
       int dp[k+1][n+1];
       memset(dp,0,sizeof(dp));
      
       for(int i=1;i<=k;i++){
            
          
           int p_d=INT_MIN;
           
           for(int j=1;j<n;j++){
               
               p_d=max(p_d,dp[i-1][j-1]-prices[j-1]);
               
               dp[i][j]=max(dp[i][j-1],p_d+prices[j]);
           }
           
        }
        return dp[k][n-1];
    }
        
};
